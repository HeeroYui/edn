<?xml version="1.0" encoding="UTF-8"?>
<EdnLang version="0.1" lang="Java">
	<ext>(java|JAVA)</ext>
	<pass1><!-- multiline section & parse all file (now) and when modification retrive previous modification -->
		<rule name="doxygen multiline">
			<color>commentDoxygen</color>
			<regex>
				<start>/\*(\*|!)</start>
				<stop>\*/</stop>
			</regex>
			<sub>doxyparse</sub>
		</rule>
		<rule name="comment multiline">
			<color>comment</color>
			<regex>
				<start>/\*</start>
				<stop>\*/</stop>
			</regex>
			<sub>TODO</sub>
		</rule>
		<rule name="comment multiline ERROR">
			<color>SYNTAX_ERROR</color>
			<regex>
				<start>/\*(\*|!)</start>
			</regex>
		</rule>
		<rule name="inline doxygen">
			<color>commentDoxygen</color>
			<regex>//!.*$</regex>
			<sub>doxyparse</sub>
		</rule>
		<rule name="inline comment">
			<color>comment</color>
			<regex>//.*$</regex>
			<sub>TODO</sub>
		</rule>
		<rule name="double quote text">
			<color>doubleQuoteText</color>
			<regex>(U|u|u8)?&quot;(.|\\[\\&quot;])*&quot;</regex> <!-- " -->
		</rule>
		<rule name="simple quote text">
			<color>doubleQuoteText</color>
			<regex>&apos;\\?.&apos;</regex>
		</rule>
	</pass1>
	<pass2> <!-- Parse on display data ==> nor regenerate every display but every time modification apear -->
		<rule name="my keyword">
			<color>keyword</color>
			<regex>\@return|goto|if|else|case|default|switch|break|continue|while|do|for\@</regex>
		</rule>
		<rule name="my function keyword">
			<color>systemFunction</color>
			<regex>\@new|try|catch|print\@</regex>
		</rule>
		<rule name="my type">
			<color>type</color>
			<regex>\@boolean|byte|char|double|float|int|long|short|String|Object|Thread|void|enum\@</regex>
		</rule>
		<rule name="my storage keyword">
			<color>storageKeyword</color>
			<regex>\@import|package|extends|Override|implements|const|class|abstract|private|public|protected|final|const|static|transiant|volatile|interface@</regex>
		</rule>
		<rule name="my common Define">
			<color>commonDefine</color>
			<regex>\@null\@</regex>
		</rule>
		<rule name="numeric constant">
			<color>number</color>
			<regex>\@((0(x|X)[0-9a-fA-F]*)|(\d+\.?\d*|\.\d+)((e|E)(\+|\-)?\d+)?)(L|l|UL|ul|u|U|F|f)?\@</regex>
		</rule>
		<rule name="my boolean">
			<color>boolean</color>
			<regex>\@true|false\@</regex>
		</rule>
		<rule name="BIG LETTER">
			<color>macro</color>
			<regex>\@[A-Z_][A-Z_0-9]{3,500}\@</regex>
		</rule>
		<rule name="java member">
			<color>memberClass</color>
			<regex>\@m_\w+\@</regex>
		</rule>
		<rule name="function input">
			<color>inputFunction</color>
			<regex>\@_\w+\@</regex>
		</rule>
		<rule name="Function name">
			<color>functionName</color>
			<regex>\@((\w|_)+[ \t]*\()</regex>
		</rule>
		<rule name="condition">
			<color>boolean</color>
			<regex>==|&lt;=|&gt;=|!=|&lt;{1,2}|&gt;{1,2}|&amp;&amp;|\{|\}</regex>
		</rule>
	</pass2>
	<pass name="doxyparse">
		<rule name="key">
			<color>doxygen-key</color>
			<regex>(\@|\\)[\t ]*\w+</regex>
		</rule>
		<rule name="in-out">
			<color>doxygen-in-out</color>
			<regex>\[(in|in,out|out)\]</regex>
		</rule>
		<rule name="function input">
			<color>inputFunction</color>
			<regex>\@_\w+\@</regex>
		</rule>
	</pass>
	<pass name="TODO">
		<rule name="function input">
			<color>SYNTAX_ERROR</color>
			<regex>TODO[ \t]*:.*</regex>
		</rule>
	</pass>
</EdnLang>
